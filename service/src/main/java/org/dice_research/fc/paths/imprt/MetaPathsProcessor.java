package org.dice_research.fc.paths.imprt;

import java.util.Collection;
import java.util.Map;
import org.aksw.jena_sparql_api.core.QueryExecutionFactory;
import org.apache.jena.rdf.model.Property;
import org.apache.jena.rdf.model.Statement;
import org.dice_research.fc.data.QRestrictedPath;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 * Class responsible for the meta-paths pre-processing.
 * 
 * @author Alexandra Silva
 *
 */
@Component
public abstract class MetaPathsProcessor {

  /**
   * The predicate to meta-paths map
   */
  protected Map<Property, Collection<QRestrictedPath>> metaPaths;

  /**
   * The query execution factory
   */
  protected QueryExecutionFactory qef;

  @Autowired
  public MetaPathsProcessor(Map<Property, Collection<QRestrictedPath>> metaPaths,
      QueryExecutionFactory qef) {
    this.metaPaths = metaPaths;
    this.qef = qef;
  }

  /**
   * Pre-processes paths loaded from file
   * 
   * @param metaPaths paths generated by a third party library
   * @param subject the fact's subject
   * @param object the fact's object
   * @return the {@link Collection} of paths after pre-processing
   */
  public abstract Collection<QRestrictedPath> processMetaPaths(Statement fact);

  public Map<Property, Collection<QRestrictedPath>> getMetaPaths() {
    return metaPaths;
  }

  public void setMetaPaths(Map<Property, Collection<QRestrictedPath>> metaPaths) {
    this.metaPaths = metaPaths;
  }
}
